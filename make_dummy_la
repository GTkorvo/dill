#!/bin/sh
#
#  usage:  make_dummy_la  directory_of_libs name_of_lib final_install_dir
if (test ! -d $1) then echo "make_dummy_la:  Directory doesn't exist"; exit; fi
if (test -r "$1/lib$2.a") then STATICLIB=lib$2.a; fi
DYNAMICFILES=`cd $1 ; ls lib$2*so`
if (test ! -d ".libs"); then mkdir .libs; fi
for dll in $DYNAMICFILES
do
  (cd .libs; ln -s $1/$dll)
done
cat << EOF >> lib$2.la
# lib$2.la - a libtool library file
# Generated by ltmain.sh - GNU libtool 1.4a-GCC3.0 (1.641.2.256 2001/05/28 20:09:07 with GCC-local changes)
#
# Please DO NOT delete this file!
# It is necessary for linking the library.

# The name that we can dlopen(3).
dlname=''

# Names of this library.
library_names='$DYNAMICFILES'

# The name of the static archive.
old_library='$STATICLIB'

# Libraries that this one depends upon.
dependency_libs=''

# Version information for libopcodes.
current=0
age=0
revision=0

# Is this an already installed library?
installed=no

# Files to dlopen/dlpreopen
dlopen=''
dlpreopen=''

# Directory that this library needs to be installed in:
libdir='$3'

EOF

cat << EOF >> .libs/lib$2.la
# lib$2.la - a libtool library file
# Generated by ltmain.sh - GNU libtool 1.4a-GCC3.0 (1.641.2.256 2001/05/28 20:09:07 with GCC-local changes)
#
# Please DO NOT delete this file!
# It is necessary for linking the library.

# The name that we can dlopen(3).
dlname=''

# Names of this library.
library_names='$DYNAMICFILES'

# The name of the static archive.
old_library='$STATICLIB'

# Libraries that this one depends upon.
dependency_libs=''

# Version information for libopcodes.
current=0
age=0
revision=0

# Is this an already installed library?
installed=yes

# Files to dlopen/dlpreopen
dlopen=''
dlpreopen=''

# Directory that this library needs to be installed in:
libdir='$3'

EOF

